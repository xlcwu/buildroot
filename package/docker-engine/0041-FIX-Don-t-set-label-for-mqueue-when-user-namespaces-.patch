From dbcb644288ffb8e0a118678d81864470d5c8c751 Mon Sep 17 00:00:00 2001
From: Mrunal Patel <mrunalp@gmail.com>
Date: Wed, 20 Jul 2016 19:52:28 -0400
Subject: [PATCH 41/41] FIX: Don't set label for mqueue when user namespaces
 are enabled

We can't modify the order of cloning/unsharing namespaces in go internal
library so we have to live with not labeling mqueue for this version.
This is being fixed in upstream version of runc that doesn't
have the same limitation.

Signed-off-by: Mrunal Patel <mrunalp@gmail.com>
Signed-off-by: Antonio Murdaca <runcom@redhat.com>
---
 .../opencontainers/runc/libcontainer/rootfs_linux.go          | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/vendor/src/github.com/opencontainers/runc/libcontainer/rootfs_linux.go b/vendor/src/github.com/opencontainers/runc/libcontainer/rootfs_linux.go
index bce2d17..4ab8367 100644
--- a/vendor/src/github.com/opencontainers/runc/libcontainer/rootfs_linux.go
+++ b/vendor/src/github.com/opencontainers/runc/libcontainer/rootfs_linux.go
@@ -37,7 +37,7 @@ func setupRootfs(config *configs.Config, console *linuxConsole, pipe io.ReadWrit
 				return newSystemError(err)
 			}
 		}
-		if err := mountToRootfs(m, config.Rootfs, config.MountLabel); err != nil {
+		if err := mountToRootfs(m, config.Rootfs, config.MountLabel, config.Namespaces.Contains(configs.NEWUSER)); err != nil {
 			return newSystemError(err)
 		}
 
@@ -102,7 +102,7 @@ func mountCmd(cmd configs.Command) error {
 	return nil
 }
 
-func mountToRootfs(m *configs.Mount, rootfs, mountLabel string) error {
+func mountToRootfs(m *configs.Mount, rootfs, mountLabel string, userNsEnabled bool) error {
 	var (
 		dest = m.Destination
 	)
@@ -121,6 +121,9 @@ func mountToRootfs(m *configs.Mount, rootfs, mountLabel string) error {
 		if err := os.MkdirAll(dest, 0755); err != nil {
 			return err
 		}
+		if userNsEnabled {
+			return mountPropagate(m, rootfs, "")
+		}
 		if err := mountPropagate(m, rootfs, mountLabel); err != nil {
 			// older kernels do not support labeling of /dev/mqueue
 			if err := mountPropagate(m, rootfs, ""); err != nil {
@@ -217,11 +220,11 @@ func mountToRootfs(m *configs.Mount, rootfs, mountLabel string) error {
 			Data:             "mode=755",
 			PropagationFlags: m.PropagationFlags,
 		}
-		if err := mountToRootfs(tmpfs, rootfs, mountLabel); err != nil {
+		if err := mountToRootfs(tmpfs, rootfs, mountLabel, userNsEnabled); err != nil {
 			return err
 		}
 		for _, b := range binds {
-			if err := mountToRootfs(b, rootfs, mountLabel); err != nil {
+			if err := mountToRootfs(b, rootfs, mountLabel, userNsEnabled); err != nil {
 				return err
 			}
 		}
-- 
1.9.1

